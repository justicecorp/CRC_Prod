name: "PROD Terraform Build automated workflow"

on: 
  push: 
    branches:
    - main
    paths:
    - '**.tf'
    - '**.tfvars'
    - 'web-be/lambda/SetVisitorCounter_Lambda.py'
    - 'web-be/lambda.zip'
    - 'web-fe/*.html'
    - 'web-fe/*.js'
    - '.github/workflows/tf-build-PROD.yml'
  workflow_dispatch:

env: 
  TF_LOG: INFO
  TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET_PROD }}
  TF_STATE_KEY: ${{ vars.TF_STATE_KEY_PROD }}
  TF_STATE_DDBTABLE: ${{ vars.TF_STATE_DDBTABLE_PROD }}
  TF_STATE_REGION: ${{ vars.TF_STATE_REGION }}
  AWS_REGION : us-east-1 # This only dictates the default region for API and CLI commands, but region is always specified on a per command basis, so it doesn't matter
  AWS_ROLE_PROD: ${{vars.AWS_ROLE_PROD}}
  AWS_HOSTEDZONE_PROD: ${{vars.AWS_HOSTEDZONE_PROD}}
  AWS_SITENAME: ${{ vars.AWS_SITENAME }}
  ZENDUTY_WEBHOOK: ${{ vars.ZENDUTY_CRC_PROD_WEBHOOK }}

# Permission can be added at job level or workflow level    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  issues: write

jobs:
  terraform:
    name: "PROD tf infrastructure deployment"
    runs-on: ubuntu-latest
    timeout-minutes: 45
    defaults:
      run:
        shell: bash
        # We keep backend terraform files in the tf-be directory.
        working-directory: ./tf-main
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      - name: Print Run info
        run: |
          echo "Github.ref = ${{ github.ref }}"
          echo "Github.ref_name = ${{ github.ref_name }}"
          echo "Github.event_name = ${{ github.event_name }}"
          echo "Github.event = ${{join(github.event.*, '\n')}}"
           
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ env.AWS_ROLE_PROD }} #change to reflect your IAM roleâ€™s ARN
            aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.1
      
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET" -backend-config="key=$TF_STATE_KEY" -backend-config="region=$TF_STATE_REGION" -backend-config="dynamodb_table=$TF_STATE_DDBTABLE"
      
      - name: Terraform format
        id: fmt
        run: terraform fmt
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -var-file="terraform.tfvars" -var "HostedZone=$AWS_HOSTEDZONE_PROD" -var "WebSiteHostName=$AWS_SITENAME" -var "ZendutyServiceWebhook=$ZENDUTY_WEBHOOK"

      - name: Terraform Apply
        id: apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars" -var "HostedZone=$AWS_HOSTEDZONE_PROD" -var "WebSiteHostName=$AWS_SITENAME" -var "ZendutyServiceWebhook=$ZENDUTY_WEBHOOK"

      - name: Terraform Apply Failed - Creating an issue
        if: steps.apply.outcome == 'failure'
        run: gh issue create --title "Branch:main - Terraform Apply Failed - Run=${{github.run_id}}" --body "Please see workflow run given by ${{github.run_id}} for information about the failure" --label "bug"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Terraform Apply Success - Cypress run
        id: cypress
        if: steps.apply.outcome == 'success'
        uses: cypress-io/github-action@v6
        with:
          working-directory: cypresstests
        env:
          CYPRESS_ghaurl: "https://${{env.AWS_SITENAME}}.${{env.AWS_HOSTEDZONE_PROD}}"

      - name: Testing Failed - Creating an issue
        if: steps.cypress.outcome != 'success'
        run: |
          gh issue create --title "Branch:main - Cypress Testing Failed - Run=${{github.run_id}}" --body "Please see workflow run given by ${{github.run_id}} for information about the failure" --label "bug"
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

     
  # need this job to run only if cypress testing was successful 
  deletedev:
    name: "PROD Delete Dev Deployment"
    needs: terraform
    uses: justicecorp/CRC_Prod/.github/workflows/tf-destroy-DEV-workflow-call.yml@Test
    